name: Build and Deploy to DigitalOcean

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: registry.digitalocean.com/dev-cr
  IMAGE_NAME: digitaloceanaiautomation
  DROPLET_NAME: ubuntu-s-1vcpu-1gb-nyc1-01

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    
    - name: Log in to DigitalOcean Container Registry
      run: doctl registry login --expiry-seconds 1200
    
    - name: Clean up existing repository before build
      run: |
        echo "Cleaning up existing repositories to avoid limit issues..."
        
        # List all repositories in the registry
        echo "Listing existing repositories..."
        doctl registry repository list-v2 dev-cr || echo "No repositories found or error listing"
        
        # Get repository count
        REPO_COUNT=$(doctl registry repository list-v2 dev-cr --format Name --no-header 2>/dev/null | wc -l)
        echo "Found $REPO_COUNT repositories"
        
        if [ "$REPO_COUNT" -ge 1 ]; then
          echo "Repository limit reached, cleaning up..."
          
          # Check if our target repository exists
          if doctl registry repository list-v2 dev-cr --format Name --no-header 2>/dev/null | grep -q "^digitaloceanaiautomation$"; then
            echo "Target repository 'digitaloceanaiautomation' exists, cleaning up old tags..."
            
            # List and delete all tags in the repository
            echo "Listing tags in digitaloceanaiautomation repository..."
            doctl registry repository list-tags dev-cr digitaloceanaiautomation || echo "No tags found"
            
            # Delete all existing tags to free up space
            TAGS=$(doctl registry repository list-tags dev-cr digitaloceanaiautomation --format Tag --no-header 2>/dev/null || echo "")
            if [ ! -z "$TAGS" ]; then
              echo "Deleting existing tags: $TAGS"
              for tag in $TAGS; do
                echo "Deleting tag: $tag"
                doctl registry repository delete-tag dev-cr digitaloceanaiautomation $tag --force || echo "Failed to delete tag $tag"
              done
            fi
          else
            # If other repositories exist, delete them completely
            EXISTING_REPOS=$(doctl registry repository list-v2 dev-cr --format Name --no-header 2>/dev/null || echo "")
            for repo in $EXISTING_REPOS; do
              echo "Deleting repository: $repo"
              doctl registry repository delete dev-cr $repo --force || echo "Failed to delete repository $repo"
            done
          fi
          
          # Run garbage collection to free up space
          echo "Running garbage collection..."
          doctl registry garbage-collection start dev-cr || echo "Garbage collection failed or not needed"
          
          # Wait a moment for cleanup to complete
          sleep 10
        else
          echo "No repositories found, proceeding with build..."
        fi
    
    - name: Build Docker image
      run: |
        docker build -t $REGISTRY/$IMAGE_NAME:$GITHUB_SHA .
        docker build -t $REGISTRY/$IMAGE_NAME:latest .
    
    - name: Push image to DigitalOcean Container Registry
      run: |
        docker push $REGISTRY/$IMAGE_NAME:$GITHUB_SHA
        docker push $REGISTRY/$IMAGE_NAME:latest
    
    - name: Deploy to DigitalOcean Droplet
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.DROPLET_HOST }}
        username: ${{ secrets.DROPLET_USERNAME }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        script: |
          # Install Docker if not already installed
          if ! command -v docker &> /dev/null; then
            curl -fsSL https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
            sudo usermod -aG docker $USER
            newgrp docker
          fi
          
          # Install doctl if not already installed
          if ! command -v doctl &> /dev/null; then
            cd ~
            wget https://github.com/digitalocean/doctl/releases/download/v1.104.0/doctl-1.104.0-linux-amd64.tar.gz
            tar xf doctl-1.104.0-linux-amd64.tar.gz
            sudo mv doctl /usr/local/bin
          fi
          
          # Configure doctl and login to registry
          doctl auth init --access-token ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          doctl registry login --expiry-seconds 1200
          
          # Stop and remove existing container
          docker stop digitaloceanaiautomation || true
          docker rm digitaloceanaiautomation || true
          
          # Pull and run new image
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker run -d --name digitaloceanaiautomation -p 80:8000 --restart unless-stopped ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          
          # Clean up old images
          docker image prune -f